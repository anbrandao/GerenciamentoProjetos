// <auto-generated />
using ControleProjetos.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ControleProjetos.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ControleProjetos.Models.Colaborador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DiretoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DiretoriaId");

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("ControleProjetos.Models.ColaboradoresProjetos", b =>
                {
                    b.Property<int>("ColaboradorId")
                        .HasColumnType("int");

                    b.Property<int>("ProjetoId")
                        .HasColumnType("int");

                    b.HasKey("ColaboradorId", "ProjetoId");

                    b.HasIndex("ProjetoId");

                    b.ToTable("ColaboradoresProjetos");
                });

            modelBuilder.Entity("ControleProjetos.Models.Diretoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diretorias");
                });

            modelBuilder.Entity("ControleProjetos.Models.Projeto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Duracao")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projetos");
                });

            modelBuilder.Entity("ControleProjetos.Models.Colaborador", b =>
                {
                    b.HasOne("ControleProjetos.Models.Diretoria", "Diretoria")
                        .WithMany("Colaboradores")
                        .HasForeignKey("DiretoriaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Diretoria");
                });

            modelBuilder.Entity("ControleProjetos.Models.ColaboradoresProjetos", b =>
                {
                    b.HasOne("ControleProjetos.Models.Colaborador", "Colaborador")
                        .WithMany("ColaboradoresProjetos")
                        .HasForeignKey("ColaboradorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControleProjetos.Models.Projeto", "Projeto")
                        .WithMany("ColaboradoresProjetos")
                        .HasForeignKey("ProjetoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Colaborador");

                    b.Navigation("Projeto");
                });

            modelBuilder.Entity("ControleProjetos.Models.Colaborador", b =>
                {
                    b.Navigation("ColaboradoresProjetos");
                });

            modelBuilder.Entity("ControleProjetos.Models.Diretoria", b =>
                {
                    b.Navigation("Colaboradores");
                });

            modelBuilder.Entity("ControleProjetos.Models.Projeto", b =>
                {
                    b.Navigation("ColaboradoresProjetos");
                });
#pragma warning restore 612, 618
        }
    }
}
